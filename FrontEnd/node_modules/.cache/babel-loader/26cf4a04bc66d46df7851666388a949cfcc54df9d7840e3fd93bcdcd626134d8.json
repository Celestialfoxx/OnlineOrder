{"ast":null,"code":"export const login=credentials=>{const loginUrl=\"/login?username=\".concat(credentials.username,\"&password=\").concat(credentials.password);// fetch will return something called a Promise\nreturn fetch(loginUrl,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}}).then(response=>{if(response.status<200||response.status>=300){throw Error(\"Fail to log in\");}});// returns a promise\n};export const signup=data=>{const signupUrl=\"/signup\";return fetch(signupUrl,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)// convert a JavaScript object (data) into a JSON string representation.\n}).then(response=>{if(response.status<200||response.status>=300){throw Error(\"Fail to sign up\");}});};export const getMenus=restId=>{return fetch(\"/restaurant/\".concat(restId,\"/menu\")).then(response=>{if(response.status<200||response.status>=300){throw Error(\"Fail to get menus\");}return response.json();// reads the response body and parses it as JSON, returns a promise that resolves with the result of parsing the body text as JSON\n});};/*\n\nWhat's the difference between JSON and JS Object?\nJSON - string, but it has the format of a obj i.e. {key: value}\n- key: must be double quoted\n\nJS Object - Object {key: value}\n- key: double quoted?\n\n*/export const getRestaurants=()=>{return fetch(\"/restaurants/menu\").then(response=>{if(response.status<200||response.status>=300){throw Error(\"Fail to get restaurants\");}return response.json();});};export const getCart=()=>{return fetch(\"/cart\").then(response=>{if(response.status<200||response.status>=300){throw Error(\"Fail to get shopping cart data\");}return response.json();});};export const checkout=()=>{return fetch(\"/cart/checkout\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}}).then(response=>{if(response.status<200||response.status>=300){throw Error(\"Fail to checkout\");}});};export const addItemToCart=itemId=>{const payload={menu_id:itemId};return fetch(\"/cart\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)}).then(response=>{if(response.status<200||response.status>=300){throw Error(\"Fail to add menu item to shopping cart\");}});};","map":{"version":3,"names":["login","credentials","loginUrl","concat","username","password","fetch","method","headers","then","response","status","Error","signup","data","signupUrl","body","JSON","stringify","getMenus","restId","json","getRestaurants","getCart","checkout","addItemToCart","itemId","payload","menu_id"],"sources":["/Users/yuxuan/Desktop/projects/doordash-app/src/utils.js"],"sourcesContent":["export const login = (credentials) => {\n  const loginUrl = `/login?username=${credentials.username}&password=${credentials.password}`;\n\n  // fetch will return something called a Promise\n  return fetch(loginUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to log in\");\n    }\n  }); // returns a promise\n};\n\nexport const signup = (data) => {\n  const signupUrl = \"/signup\";\n\n  return fetch(signupUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data), // convert a JavaScript object (data) into a JSON string representation.\n  }).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to sign up\");\n    }\n  });\n};\n\nexport const getMenus = (restId) => {\n  return fetch(`/restaurant/${restId}/menu`).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get menus\");\n    }\n\n    return response.json(); // reads the response body and parses it as JSON, returns a promise that resolves with the result of parsing the body text as JSON\n  });\n};\n\n/*\n\nWhat's the difference between JSON and JS Object?\nJSON - string, but it has the format of a obj i.e. {key: value}\n- key: must be double quoted\n\nJS Object - Object {key: value}\n- key: double quoted?\n\n*/\n\nexport const getRestaurants = () => {\n  return fetch(\"/restaurants/menu\").then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get restaurants\");\n    }\n\n    return response.json();\n  });\n};\n\nexport const getCart = () => {\n  return fetch(\"/cart\").then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get shopping cart data\");\n    }\n\n    return response.json();\n  });\n};\n\nexport const checkout = () => {\n  return fetch(\"/cart/checkout\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to checkout\");\n    }\n  });\n};\n\nexport const addItemToCart = (itemId) => {\n  const payload = {\n    menu_id: itemId,\n  };\n\n  return fetch(`/cart`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  }).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to add menu item to shopping cart\");\n    }\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}