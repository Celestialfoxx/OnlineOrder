{"ast":null,"code":"export const login = credentials => {\n  const loginUrl = `/login?username=${credentials.username}&password=${credentials.password}`;\n\n  // fetch will return something called a Promise\n  return fetch(loginUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to log in\");\n    }\n  }); // returns a promise\n};\nexport const signup = data => {\n  const signupUrl = \"/signup\";\n  return fetch(signupUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data) // convert a JavaScript object (data) into a JSON string representation.\n  }).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to sign up\");\n    }\n  });\n};\nexport const getMenus = restId => {\n  return fetch(`/restaurant/${restId}/menu`).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get menus\");\n    }\n    return response.json(); // reads the response body and parses it as JSON, returns a promise that resolves with the result of parsing the body text as JSON\n  });\n};\n\n/*\n\nWhat's the difference between JSON and JS Object?\nJSON - string, but it has the format of a obj i.e. {key: value}\n- key: must be double quoted\n\nJS Object - Object {key: value}\n- key: double quoted?\n\n*/\n\nexport const getRestaurants = () => {\n  return fetch(\"/restaurants/menu\").then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get restaurants\");\n    }\n    return response.json();\n  });\n};\nexport const getCart = () => {\n  return fetch(\"/cart\").then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get shopping cart data\");\n    }\n    return response.json();\n  });\n};\nexport const checkout = () => {\n  return fetch(\"/cart/checkout\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to checkout\");\n    }\n  });\n};\nexport const addItemToCart = itemId => {\n  const payload = {\n    menu_id: itemId\n  };\n  return fetch(`/cart`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(payload)\n  }).then(response => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to add menu item to shopping cart\");\n    }\n  });\n};","map":{"version":3,"names":["login","credentials","loginUrl","username","password","fetch","method","headers","then","response","status","Error","signup","data","signupUrl","body","JSON","stringify","getMenus","restId","json","getRestaurants","getCart","checkout","addItemToCart","itemId","payload","menu_id"],"sources":["/Users/yuxuan/Desktop/projects/doordash-app/src/utils.js"],"sourcesContent":["export const login = (credentials) => {\n  const loginUrl = `/login?username=${credentials.username}&password=${credentials.password}`;\n\n  // fetch will return something called a Promise\n  return fetch(loginUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to log in\");\n    }\n  }); // returns a promise\n};\n\nexport const signup = (data) => {\n  const signupUrl = \"/signup\";\n\n  return fetch(signupUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data), // convert a JavaScript object (data) into a JSON string representation.\n  }).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to sign up\");\n    }\n  });\n};\n\nexport const getMenus = (restId) => {\n  return fetch(`/restaurant/${restId}/menu`).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get menus\");\n    }\n\n    return response.json(); // reads the response body and parses it as JSON, returns a promise that resolves with the result of parsing the body text as JSON\n  });\n};\n\n/*\n\nWhat's the difference between JSON and JS Object?\nJSON - string, but it has the format of a obj i.e. {key: value}\n- key: must be double quoted\n\nJS Object - Object {key: value}\n- key: double quoted?\n\n*/\n\nexport const getRestaurants = () => {\n  return fetch(\"/restaurants/menu\").then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get restaurants\");\n    }\n\n    return response.json();\n  });\n};\n\nexport const getCart = () => {\n  return fetch(\"/cart\").then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to get shopping cart data\");\n    }\n\n    return response.json();\n  });\n};\n\nexport const checkout = () => {\n  return fetch(\"/cart/checkout\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to checkout\");\n    }\n  });\n};\n\nexport const addItemToCart = (itemId) => {\n  const payload = {\n    menu_id: itemId,\n  };\n\n  return fetch(`/cart`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(payload),\n  }).then((response) => {\n    if (response.status < 200 || response.status >= 300) {\n      throw Error(\"Fail to add menu item to shopping cart\");\n    }\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}